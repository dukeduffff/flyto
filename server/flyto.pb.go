// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: flyto.proto

package server

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NetworkType int32

const (
	NetworkType_NETWORK_TYPE_TCP NetworkType = 0 // TCP网络
	NetworkType_NETWORK_TYPE_UDP NetworkType = 1 // UDP网络
)

// Enum value maps for NetworkType.
var (
	NetworkType_name = map[int32]string{
		0: "NETWORK_TYPE_TCP",
		1: "NETWORK_TYPE_UDP",
	}
	NetworkType_value = map[string]int32{
		"NETWORK_TYPE_TCP": 0,
		"NETWORK_TYPE_UDP": 1,
	}
)

func (x NetworkType) Enum() *NetworkType {
	p := new(NetworkType)
	*p = x
	return p
}

func (x NetworkType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NetworkType) Descriptor() protoreflect.EnumDescriptor {
	return file_flyto_proto_enumTypes[0].Descriptor()
}

func (NetworkType) Type() protoreflect.EnumType {
	return &file_flyto_proto_enumTypes[0]
}

func (x NetworkType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NetworkType.Descriptor instead.
func (NetworkType) EnumDescriptor() ([]byte, []int) {
	return file_flyto_proto_rawDescGZIP(), []int{0}
}

type ClientInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerPort    string                 `protobuf:"bytes,1,opt,name=server_port,json=serverPort,proto3" json:"server_port,omitempty"`                             // 服务器端口
	ClientIp      string                 `protobuf:"bytes,2,opt,name=client_ip,json=clientIp,proto3" json:"client_ip,omitempty"`                                   // 客户端ip
	ClientPort    string                 `protobuf:"bytes,3,opt,name=client_port,json=clientPort,proto3" json:"client_port,omitempty"`                             // 客户端端口
	NetworkType   NetworkType            `protobuf:"varint,4,opt,name=network_type,json=networkType,proto3,enum=server.NetworkType" json:"network_type,omitempty"` // 网络类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	mi := &file_flyto_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_flyto_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_flyto_proto_rawDescGZIP(), []int{0}
}

func (x *ClientInfo) GetServerPort() string {
	if x != nil {
		return x.ServerPort
	}
	return ""
}

func (x *ClientInfo) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *ClientInfo) GetClientPort() string {
	if x != nil {
		return x.ClientPort
	}
	return ""
}

func (x *ClientInfo) GetNetworkType() NetworkType {
	if x != nil {
		return x.NetworkType
	}
	return NetworkType_NETWORK_TYPE_TCP
}

// 定义消息结构体
type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`          // 客户端id
	CipherKey     string                 `protobuf:"bytes,2,opt,name=cipher_key,json=cipherKey,proto3" json:"cipher_key,omitempty"`       // 加密密钥,用来判断是否合法
	ClientInfos   []*ClientInfo          `protobuf:"bytes,3,rep,name=client_infos,json=clientInfos,proto3" json:"client_infos,omitempty"` // 客户端信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_flyto_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyto_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_flyto_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RegisterRequest) GetCipherKey() string {
	if x != nil {
		return x.CipherKey
	}
	return ""
}

func (x *RegisterRequest) GetClientInfos() []*ClientInfo {
	if x != nil {
		return x.ClientInfos
	}
	return nil
}

type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        bool                   `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_flyto_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyto_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_flyto_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClientId      string                 `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"` // 客户端id
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_flyto_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flyto_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_flyto_proto_rawDescGZIP(), []int{3}
}

func (x *PingRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_flyto_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flyto_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_flyto_proto_rawDescGZIP(), []int{4}
}

var File_flyto_proto protoreflect.FileDescriptor

const file_flyto_proto_rawDesc = "" +
	"\n" +
	"\vflyto.proto\x12\x06server\"\xa3\x01\n" +
	"\n" +
	"ClientInfo\x12\x1f\n" +
	"\vserver_port\x18\x01 \x01(\tR\n" +
	"serverPort\x12\x1b\n" +
	"\tclient_ip\x18\x02 \x01(\tR\bclientIp\x12\x1f\n" +
	"\vclient_port\x18\x03 \x01(\tR\n" +
	"clientPort\x126\n" +
	"\fnetwork_type\x18\x04 \x01(\x0e2\x13.server.NetworkTypeR\vnetworkType\"\x84\x01\n" +
	"\x0fRegisterRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\x12\x1d\n" +
	"\n" +
	"cipher_key\x18\x02 \x01(\tR\tcipherKey\x125\n" +
	"\fclient_infos\x18\x03 \x03(\v2\x12.server.ClientInfoR\vclientInfos\"*\n" +
	"\x10RegisterResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\"*\n" +
	"\vPingRequest\x12\x1b\n" +
	"\tclient_id\x18\x01 \x01(\tR\bclientId\"\x0e\n" +
	"\fPingResponse*9\n" +
	"\vNetworkType\x12\x14\n" +
	"\x10NETWORK_TYPE_TCP\x10\x00\x12\x14\n" +
	"\x10NETWORK_TYPE_UDP\x10\x012\x80\x01\n" +
	"\fFlyToService\x12=\n" +
	"\bRegister\x12\x17.server.RegisterRequest\x1a\x18.server.RegisterResponse\x121\n" +
	"\x04Ping\x12\x13.server.PingRequest\x1a\x14.server.PingResponseB(Z&github.com/john/myproject/flyto;serverb\x06proto3"

var (
	file_flyto_proto_rawDescOnce sync.Once
	file_flyto_proto_rawDescData []byte
)

func file_flyto_proto_rawDescGZIP() []byte {
	file_flyto_proto_rawDescOnce.Do(func() {
		file_flyto_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_flyto_proto_rawDesc), len(file_flyto_proto_rawDesc)))
	})
	return file_flyto_proto_rawDescData
}

var file_flyto_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_flyto_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_flyto_proto_goTypes = []any{
	(NetworkType)(0),         // 0: server.NetworkType
	(*ClientInfo)(nil),       // 1: server.ClientInfo
	(*RegisterRequest)(nil),  // 2: server.RegisterRequest
	(*RegisterResponse)(nil), // 3: server.RegisterResponse
	(*PingRequest)(nil),      // 4: server.PingRequest
	(*PingResponse)(nil),     // 5: server.PingResponse
}
var file_flyto_proto_depIdxs = []int32{
	0, // 0: server.ClientInfo.network_type:type_name -> server.NetworkType
	1, // 1: server.RegisterRequest.client_infos:type_name -> server.ClientInfo
	2, // 2: server.FlyToService.Register:input_type -> server.RegisterRequest
	4, // 3: server.FlyToService.Ping:input_type -> server.PingRequest
	3, // 4: server.FlyToService.Register:output_type -> server.RegisterResponse
	5, // 5: server.FlyToService.Ping:output_type -> server.PingResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_flyto_proto_init() }
func file_flyto_proto_init() {
	if File_flyto_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_flyto_proto_rawDesc), len(file_flyto_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flyto_proto_goTypes,
		DependencyIndexes: file_flyto_proto_depIdxs,
		EnumInfos:         file_flyto_proto_enumTypes,
		MessageInfos:      file_flyto_proto_msgTypes,
	}.Build()
	File_flyto_proto = out.File
	file_flyto_proto_goTypes = nil
	file_flyto_proto_depIdxs = nil
}
